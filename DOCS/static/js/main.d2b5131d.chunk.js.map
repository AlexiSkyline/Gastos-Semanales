{"version":3,"sources":["helpers.js","components/ControlPresupuesto.jsx","components/Error.jsx","components/Formulario.jsx","components/Gasto.jsx","components/Listado.jsx","components/Pregunta.jsx","App.js","reportWebVitals.js","index.js"],"names":["revisarPresupuesto","presupuesto","restante","ControlPresupuesto","className","Error","mensaje","Formulario","setGasto","setCrearGasto","useState","nombre","setNombre","cantidad","setCantidad","error","setError","onSubmit","e","preventDefault","isNaN","trim","gasto","id","Date","now","type","placeholder","value","onChange","target","Gasto","eliminarGasto","onClick","parseInt","Listado","gastos","map","Pregunta","setPresupuesto","setRestante","actualizarPregunta","values","App","mostrarpregunta","setGastos","crearGasto","useEffect","presupuestoRestante","newGatos","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMACaA,EAAqB,SAAEC,EAAaC,GAY7C,OARMD,EAAc,EAAMC,EACd,qBACCD,EAAc,EAAMC,EACrB,sBAEA,uB,OCPHC,EAAqB,SAAC,GAA+B,IAA7BF,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAC9C,OACI,qCACG,sBAAKE,UAAU,sBAAf,2BACqBH,KAEpB,sBAAKG,UAAYJ,EAAoBC,EAAaC,GAAlD,wBACiBA,SCRhBG,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAEjB,mBAAGF,UAAU,2BAAb,SAA0CE,KCDjCC,EAAa,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAEnC,EAA8BC,mBAAS,IAAvC,mBAAQC,EAAR,KAAgBC,EAAhB,KACA,EAAkCF,mBAAS,GAA3C,mBAAQG,EAAR,KAAkBC,EAAlB,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KA6BA,OACI,uBAAMC,SA1BW,SAAEC,GAInB,GAHAA,EAAEC,iBAGEN,EAAW,GAAKO,MAAOP,IAA8B,KAAhBF,EAAOU,KAC5CL,GAAU,OADd,CAMA,IAAMM,EAAQ,CACVX,SACAE,WACAU,GAAKC,KAAKC,OAIdjB,EAAUc,GACVb,GAAe,GAGfG,EAAU,IACVE,EAAY,KAIZ,UAEMC,EAAQ,cAAC,EAAD,CAAOT,QAAQ,iEAAmE,KAE5F,2DAEA,sBAAKF,UAAU,QAAf,UACI,qDACA,uBACIsB,KAAK,OACLtB,UAAU,eACVuB,YAAY,gBACZC,MAAQjB,EACRkB,SAAW,SAAAX,GAAC,OAAIN,EAAWM,EAAEY,OAAOF,aAI5C,sBAAKxB,UAAU,QAAf,UACI,uDACA,uBACIsB,KAAK,SACLtB,UAAU,eACVuB,YAAY,UACZC,MAAQf,EACRgB,SAAW,SAAAX,GAAC,OAAIJ,EAAaI,EAAEY,OAAOF,aAI9C,uBACIF,KAAK,SACLtB,UAAU,8BACVwB,MAAM,sBClETG,EAAQ,SAAC,GAAD,IAAGT,EAAH,EAAGA,MAAOU,EAAV,EAAUA,cAAV,OAEjB,oBAAI5B,UAAU,SAAd,SACI,8BACMkB,EAAMX,OAER,uBAAMP,UAAU,QAAhB,eAA2BkB,EAAMT,SAAjC,OACA,wBACIT,UAAU,iBACV6B,QAAU,kBAAMD,EAAeV,EAAMC,GAAIW,SAAUZ,EAAMT,YAF7D,0BCNCsB,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQJ,EAAX,EAAWA,cAAX,OAEnB,sBAAK5B,UAAU,oBAAf,UACI,yCACEgC,EAAOC,KAAK,SAAAf,GAAK,OACf,cAAC,EAAD,CAEIA,MAAQA,EACRU,cAAgBA,GAFVV,EAAMC,WCNfe,EAAW,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,eAAgBC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,mBAEpD,EAAkC/B,mBAAS,GAA3C,mBAAQG,EAAR,KAAkBC,EAAlB,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAuBA,OACI,qCACI,uDAEED,EAAQ,cAAC,EAAD,CAAOT,QAAQ,iCAAmC,KAE5D,uBAAMW,SAtBa,SAAEC,GACzBA,EAAEC,iBAGEN,EAAW,GAAKO,MAAOP,GACvBG,GAAU,IAKdA,GAAU,GACVuB,EAAgB1B,GAChB2B,EAAa3B,GACb4B,GAAoB,KAShB,UACI,uBACIf,KAAK,SACLtB,UAAU,eACVuB,YAAY,wBACZE,SA/BW,SAAEX,GACzBJ,EAAaoB,SAAUhB,EAAEY,OAAOF,WAiCxB,uBACIF,KAAK,SACLtB,UAAU,8BACVsC,OAAO,+BC4CZC,MApFf,WAEE,MAAwCjC,mBAAS,GAAjD,mBAAQT,EAAR,KAAqBsC,EAArB,KACA,EAAkC7B,mBAAS,GAA3C,mBAAQR,EAAR,KAAkBsC,EAAlB,KACA,EAAgD9B,oBAAS,GAAzD,mBAAQkC,EAAR,KAAyBH,EAAzB,KACA,EAA8B/B,mBAAS,IAAvC,mBAAQ0B,EAAR,KAAgBS,EAAhB,KACA,EAA4BnC,mBAAS,IAArC,mBAAQY,EAAR,KAAed,EAAf,KACA,EAAsCE,oBAAS,GAA/C,mBAAQoC,EAAR,KAAoBrC,EAApB,KA6BA,OA1BAsC,qBAAW,WAGP,GAAID,EAAa,CACfD,EAAU,GAAD,mBACJT,GADI,CAEJd,KAIL,IAAM0B,EAAsB9C,EAAWoB,EAAMT,SAC7C2B,EAAaQ,GAEbvC,GAAe,MAIlB,CAAEa,EAAOwB,EAAYV,EAAQlC,IAU9B,qBAAKE,UAAU,YAAf,SAEE,mCACI,kDAEA,qBAAKA,UAAU,gCAAf,SAEMwC,EAEI,cAAC,EAAD,CACIL,eAAiBA,EACjBC,YAAcA,EACdC,mBAAqBA,IAIzB,sBAAKrC,UAAU,MAAf,UACI,qBAAKA,UAAU,kBAAf,SACE,cAAC,EAAD,CACGI,SAAWA,EACXC,cAAgBA,MAIrB,sBAAKL,UAAU,kBAAf,UACE,cAAC,EAAD,CACIgC,OAASA,EACTJ,cAnCN,SAAET,EAAItB,GACxB,IAAMgD,EAAWb,EAAOc,QAAQ,SAAA5B,GAAK,OAAIA,EAAMC,KAAOA,KACtDsB,EAAWI,GAEXT,EAAatC,EAAWD,MAkCJ,cAAC,EAAD,CACIA,YAAcA,EACdC,SAAWA,kBC/D1BiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d2b5131d.chunk.js","sourcesContent":["\r\nexport const revisarPresupuesto = ( presupuesto, restante ) => {\r\n\r\n    let clase;\r\n\r\n    if( ( presupuesto / 4 ) > restante ) {\r\n        clase = 'alert alert-danger';\r\n    } else if( ( presupuesto / 2 ) > restante ) {\r\n        clase = 'alert alert-warning';\r\n    } else {\r\n        clase = 'alert alert-success';\r\n    }\r\n\r\n    return clase;\r\n} ","import React from 'react'\r\nimport { revisarPresupuesto } from '../helpers'\r\n\r\nexport const ControlPresupuesto = ({ presupuesto, restante }) => {\r\n    return (\r\n        <>\r\n           <div className=\"alert alert-primary\">\r\n                Presupuesto:$ { presupuesto }\r\n            </div>\r\n            <div className={ revisarPresupuesto( presupuesto, restante ) }>\r\n                Restante:$ { restante }\r\n            </div> \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const Error = ({ mensaje }) => (\r\n\r\n    <p className=\"alert alert-danger error\">{ mensaje }</p>\r\n\r\n);\r\n","import React, { useState } from 'react';\r\nimport { Error } from './Error';\r\n\r\nexport const Formulario = ({ setGasto, setCrearGasto }) => {\r\n\r\n    const [ nombre, setNombre ] = useState('');\r\n    const [ cantidad, setCantidad ] = useState(0);\r\n    const [error, setError] = useState(false);\r\n    \r\n\r\n    // * Cuando el usuario agrega un gasto\r\n    const agregarGasto = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        // * Validar\r\n        if( cantidad < 1 || isNaN( cantidad ) || nombre.trim === '' ) {\r\n            setError( true );\r\n            return;\r\n        }\r\n\r\n        // * Construir el gasto\r\n        const gasto = {\r\n            nombre,\r\n            cantidad,\r\n            id : Date.now()\r\n        }\r\n\r\n        // * Pasar el gasto al componente principal\r\n        setGasto( gasto );\r\n        setCrearGasto( true );\r\n\r\n        // * Resetear el Form\r\n        setNombre('');\r\n        setCantidad(0);\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={ agregarGasto }>\r\n\r\n            { error ? <Error mensaje=\"Ambos campos son obligatorios o el Presupuesto es Incorrecto\"/> : null }\r\n\r\n            <h2>Agrega tus gastos aquí</h2>\r\n\r\n            <div className=\"campo\">\r\n                <label>Nombre del Gasto</label>\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"u-full-width\" \r\n                    placeholder=\"Ej. Tranporte\"\r\n                    value={ nombre }\r\n                    onChange={ e => setNombre( e.target.value ) }\r\n                />\r\n            </div>\r\n            \r\n            <div className=\"campo\">\r\n                <label>Canridad del Gasto</label>\r\n                <input \r\n                    type=\"number\"\r\n                    className=\"u-full-width\" \r\n                    placeholder=\"Ej. 300\"\r\n                    value={ cantidad }\r\n                    onChange={ e => setCantidad( e.target.value ) }\r\n                />\r\n            </div>\r\n\r\n            <input \r\n                type=\"submit\" \r\n                className=\"button-primary u-full-width\"\r\n                value=\"Agregar Gasto\"\r\n            />\r\n        </form>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport const Gasto = ({ gasto, eliminarGasto }) => (\r\n    \r\n    <li className=\"gastos\">\r\n        <p>\r\n            { gasto.nombre }\r\n\r\n            <span className=\"gasto\">$ {gasto.cantidad } </span>\r\n            <button \r\n                className=\"boton-eliminar\"\r\n                onClick={ () => eliminarGasto( gasto.id, parseInt( gasto.cantidad )  ) }\r\n            >\r\n                Borrar\r\n            </button>\r\n        </p>\r\n    </li>\r\n\r\n);","import React from 'react'\r\nimport { Gasto } from './Gasto';\r\n\r\nexport const Listado = ({ gastos, eliminarGasto }) => (\r\n\r\n    <div className=\"gastos-realizados\">\r\n        <h2>Listado</h2>\r\n        { gastos.map( gasto => (\r\n            <Gasto \r\n                key={ gasto.id }\r\n                gasto={ gasto } \r\n                eliminarGasto={ eliminarGasto }\r\n            />\r\n        ))}\r\n    </div>\r\n\r\n);\r\n","import React, { useState } from 'react';\r\nimport { Error } from './Error';\r\n\r\nexport const Pregunta = ({ setPresupuesto, setRestante, actualizarPregunta }) => {\r\n\r\n    const [ cantidad, setCantidad ] = useState(0);\r\n    const [error, setError] = useState(false);\r\n\r\n    // * Función que lee el presupuesto \r\n    const definirPresupuesto = ( e ) => {\r\n        setCantidad( parseInt( e.target.value ) );\r\n    }\r\n\r\n    const agregarPresupuesto = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        // * Validar\r\n        if( cantidad < 1 || isNaN( cantidad ) ) {\r\n            setError( true );\r\n            return;\r\n        }\r\n\r\n        // * Si pasa la validación\r\n        setError( false );\r\n        setPresupuesto( cantidad );\r\n        setRestante( cantidad );\r\n        actualizarPregunta( false );\r\n    } \r\n\r\n    return (\r\n        <>\r\n            <h2>Coloca tu Presupuesto</h2>\r\n\r\n            { error ? <Error mensaje=\"El Presupuesto es Incorrecto\"/> : null }\r\n\r\n            <form onSubmit={ agregarPresupuesto }>\r\n                <input \r\n                    type=\"number\" \r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Coloca tu presupuesto\"\r\n                    onChange={ definirPresupuesto }\r\n                />\r\n\r\n                <input \r\n                    type=\"submit\" \r\n                    className=\"button-primary u-full-width\"\r\n                    values=\"Definir Presupuesto\"\r\n                />\r\n            </form>  \r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport { ControlPresupuesto } from './components/ControlPresupuesto';\nimport { Formulario } from './components/Formulario';\nimport { Listado } from './components/Listado';\nimport { Pregunta } from './components/Pregunta';\n\nfunction App() {\n\n  const [ presupuesto, setPresupuesto ] = useState(0);\n  const [ restante, setRestante ] = useState(0);\n  const [ mostrarpregunta, actualizarPregunta ] = useState(true);\n  const [ gastos, setGastos ] = useState([]);\n  const [ gasto, setGasto ] = useState([]);\n  const [ crearGasto, setCrearGasto ] = useState(false);\n\n  // * usEffect que actualiza el restante\n  useEffect( () => {\n\n      // * agregar el nuevo presupuesto\n      if( crearGasto ) {\n        setGastos([\n          ...gastos,\n             gasto\n        ]);\n\n        // * resta del presupuesto actual\n        const presupuestoRestante = restante - gasto.cantidad;\n        setRestante( presupuestoRestante );\n  \n        setCrearGasto( false );\n      \n      }\n    \n  }, [ gasto, crearGasto, gastos, restante ]);\n\n  const eliminarGasto = ( id, presupuesto ) => {\n      const newGatos = gastos.filter( gasto => gasto.id !== id );\n      setGastos( newGatos );\n      // * Sumo la cantidad del gasto eliminado al restante total. \n      setRestante( restante + presupuesto );\n  }\n\n  return (\n    <div className=\"container\">\n\n      <header>\n          <h1>Gastos Semanales</h1>\n\n          <div className=\"contenido-principal contenido\">\n              \n              { mostrarpregunta ? \n                  (\n                    <Pregunta \n                        setPresupuesto={ setPresupuesto }\n                        setRestante={ setRestante }\n                        actualizarPregunta={ actualizarPregunta }\n                    />\n                  ) \n                  : (\n                    <div className=\"row\">\n                        <div className=\"one-half column\">\n                          <Formulario \n                             setGasto={ setGasto }\n                             setCrearGasto={ setCrearGasto }\n                          />\n                        </div>\n      \n                        <div className=\"one-half column\">\n                          <Listado \n                              gastos={ gastos }\n                              eliminarGasto={ eliminarGasto }\n                          />\n\n                          <ControlPresupuesto \n                              presupuesto={ presupuesto }\n                              restante={ restante }\n                          />\n                        </div>\n                    </div>\n                  )\n              }\n              \n          </div>\n          \n      </header>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}